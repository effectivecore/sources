diff --git forkSrcPrefix/system/module_storage/backend/patterns/Selection.php forkDstPrefix/system/module_storage/backend/patterns/Selection.php
index 8193696c2e11f779967c3315c34ab392c6e71d0e..70024996ef1836607defe3667fe6b0f047731c3d 100644
--- forkSrcPrefix/system/module_storage/backend/patterns/Selection.php
+++ forkDstPrefix/system/module_storage/backend/patterns/Selection.php
@@ -156,11 +156,14 @@ class Selection extends Markup implements has_Data_cache {
                                 $c_def_converters_on_render = $this->_entities['_main']->fields[$c_field->entity_field_name]->converters->on_render ?? null;
                                 $c_value_type               = $this->_entities['_main']->fields[$c_field->entity_field_name]->type;
                                 $c_value                    = $c_instance->                    {$c_field->entity_field_name};
+                                $c_title_final              = isset($c_field->title      ) ? $c_field->title : $c_def_title;
+                                $c_title_when_sortable      = isset($c_field->is_sortable) ? new Markup('a', ['href' => '?sort['.$this->pager_id.']='.$c_field->entity_field_name], $c_title_final) : null;
                                 Token::insert('selection__'.$this->main_entity_name.'__'.$c_field->entity_field_name.           '__current__context', 'text', $c_value, null, 'storage');
                                 Token::insert('selection__'.$this->main_entity_name.'__'.$c_field->entity_field_name.'__'.$c_instance_id.'__context', 'text', $c_value, null, 'storage');
                                 $c_row[$c_cell_id] = [
                                     'attributes'           => ['data-entity-field' => $c_field->entity_field_name],
-                                    'title'                => isset($c_field->title) ? $c_field->title : $c_def_title,
+                                    'title'                => $c_title_final,
+                                    'title_when_sortable'  => $c_title_when_sortable,
                                     'value'                => $c_value,
                                     'type'                 => $c_value_type,
                                     'converters_on_render' => $c_field->converters->on_render ?? $c_def_converters_on_render,
@@ -185,11 +188,14 @@ class Selection extends Markup implements has_Data_cache {
                                         $c_def_converters_on_render = $this->_entities[$c_join->entity_name]->fields[$c_field->entity_field_name]->converters->on_render ?? null;
                                         $c_value_type               = $this->_entities[$c_join->entity_name]->fields[$c_field->entity_field_name]->type;
                                         $c_value                    = $c_instance->   {$c_join->entity_name   .'.'.  $c_field->entity_field_name};
+                                        $c_title_final              = isset($c_field->title      ) ? $c_field->title : $c_def_title;
+                                        $c_title_when_sortable      = isset($c_field->is_sortable) ? new Markup('a', ['href' => '?sort['.$this->pager_id.']='.$c_field->entity_field_name], $c_title_final) : null;
                                         Token::insert('selection__'.$c_join->entity_name.'__'.$c_field->entity_field_name.           '__current__context', 'text', $c_value, null, 'storage');
                                         Token::insert('selection__'.$c_join->entity_name.'__'.$c_field->entity_field_name.'__'.$c_instance_id.'__context', 'text', $c_value, null, 'storage');
                                         $c_row[$c_join_row_id.'_'.$c_cell_id] = [
                                             'attributes'           => ['data-entity-field' => $c_join->entity_name.'.'.$c_field->entity_field_name],
-                                            'title'                => isset($c_field->title) ? $c_field->title : $c_def_title,
+                                            'title'                => $c_title_final,
+                                            'title_when_sortable'  => $c_title_when_sortable,
                                             'value'                => $c_value,
                                             'type'                 => $c_value_type,
                                             'converters_on_render' => $c_field->converters->on_render ?? $c_def_converters_on_render,
diff --git forkSrcPrefix/system/module_core/data/request_settings.data forkDstPrefix/system/module_core/data/request_settings.data
index 73594c163fc3affd6c80e91a6c897ab62167f3be..05d582e22bdc743b325fb215668016b11c35129d 100644
--- forkSrcPrefix/system/module_core/data/request_settings.data
+++ forkDstPrefix/system/module_core/data/request_settings.data
@@ -12,4 +12,5 @@ request_settings
   - =: page_id
   - =: poster
   - =: row_count
+  - =: sort
   - =: thumb
\ No newline at end of file
diff --git forkSrcPrefix/system/module_page/backend/patterns/Decorator.php forkDstPrefix/system/module_page/backend/patterns/Decorator.php
index 2cf6552faf3c2dad0c7a9d737b35aea86ea0fa04..43985bf9f7007abf5d59c7b2f00362065f662457 100644
--- forkSrcPrefix/system/module_page/backend/patterns/Decorator.php
+++ forkDstPrefix/system/module_page/backend/patterns/Decorator.php
@@ -121,9 +121,9 @@ class Decorator extends Markup {
                             if ($this->visibility_row_id === 'visible'                       ) $c_cell_attributes['data-cell-id'] = $c_cell_id;
                             if ($this->visibility_row_id === 'not_int' && !is_int($c_cell_id)) $c_cell_attributes['data-cell-id'] = $c_cell_id;
                             if ($c_cell_id !== 'attributes') {
-                                $thead_row->child_insert(
-                                    new Markup_Table_head_row_cell($c_cell_attributes, $this->data[key($this->data)][$c_cell_id]['title']), $c_cell_id
-                                );
+                                if (!empty($c_cell['title_when_sortable']))
+                                     $thead_row->child_insert(new Markup_Table_head_row_cell($c_cell_attributes, $c_cell['title_when_sortable']), $c_cell_id);
+                                else $thead_row->child_insert(new Markup_Table_head_row_cell($c_cell_attributes, $c_cell['title'              ]), $c_cell_id);
                             }
                         }
                         # make tbody
@@ -169,7 +169,7 @@ class Decorator extends Markup {
                             if ($this->visibility_row_id === 'visible'                       ) $c_cell_attributes['data-cell-id'] = $c_cell_id;
                             if ($this->visibility_row_id === 'not_int' && !is_int($c_cell_id)) $c_cell_attributes['data-cell-id'] = $c_cell_id;
                             if ($c_cell_id !== 'attributes') {
-                                $titles[$c_cell_id] = $this->data[key($this->data)][$c_cell_id]['title'];
+                                $titles[$c_cell_id] = $c_cell['title'];
                                 $xhead_row->child_insert(
                                     new Markup('x-cell', $c_cell_attributes, $titles[$c_cell_id]), $c_cell_id
                                 );
@@ -210,7 +210,7 @@ class Decorator extends Markup {
                         $titles = [];
                         foreach (reset($this->data) as $c_cell_id => $c_cell)
                             if ($c_cell_id !== 'attributes')
-                                $titles[$c_cell_id] = $this->data[key($this->data)][$c_cell_id]['title'];
+                                $titles[$c_cell_id] = $c_cell['title'];
                         foreach ($this->data as $c_row_id => $c_row) {
                             $c_row_attributes = $this->attributes_select('result_attributes') + static::attributes_eject($c_row) + ['data-view-type' => 'table-dl'];
                             if ($this->visibility_row_id === 'visible'                      ) $c_row_attributes['data-row-id'] = $c_row_id;
@@ -239,7 +239,7 @@ class Decorator extends Markup {
                         $titles = [];
                         foreach (reset($this->data) as $c_cell_id => $c_cell)
                             if ($c_cell_id !== 'attributes')
-                                $titles[$c_cell_id] = $this->data[key($this->data)][$c_cell_id]['title'];
+                                $titles[$c_cell_id] = $c_cell['title'];
                         foreach ($this->data as $c_row_id => $c_row) {
                             $c_row_attributes = $this->attributes_select('result_attributes') + static::attributes_eject($c_row);
                             if ($this->visibility_row_id === 'visible'                      ) $c_row_attributes['data-row-id'] = $c_row_id;
@@ -268,7 +268,7 @@ class Decorator extends Markup {
                         $titles = [];
                         foreach (reset($this->data) as $c_cell_id => $c_cell)
                             if ($c_cell_id !== 'attributes')
-                                $titles[$c_cell_id] = $this->data[key($this->data)][$c_cell_id]['title'];
+                                $titles[$c_cell_id] = $c_cell['title'];
                         foreach ($this->data as $c_row_id => $c_row) {
                             $c_row_attributes = $this->attributes_select('result_attributes') + static::attributes_eject($c_row);
                             if ($this->visibility_row_id === 'visible'                      ) $c_row_attributes['data-row-id'] = $c_row_id;
diff --git forkSrcPrefix/system/module_page/data/selections.data forkDstPrefix/system/module_page/data/selections.data
index 5dde03627a47323722fc831453eb04755bee68f5..38fb05d7ae5b40d51253c3798798dda46c49ac43 100644
--- forkSrcPrefix/system/module_page/data/selections.data
+++ forkDstPrefix/system/module_page/data/selections.data
@@ -500,13 +500,14 @@ selections
     main_entity_name: text
     pager_is_enabled: true
     decorator_settings
-    - view_type: table-adaptive
+    - view_type: table
     query_settings
     - limit: 50
     fields
     - main
       - id
           entity_field_name: id
+          is_sortable: true
           weight: +400
       - description
           entity_field_name: description
@@ -514,9 +515,11 @@ selections
           weight: +380
       - created
           entity_field_name: created
+          is_sortable: true
           weight: +360
       - updated
           entity_field_name: updated
+          is_sortable: true
           weight: +340
       - is_embedded
           entity_field_name: is_embedded
